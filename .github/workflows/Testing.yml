name: Test CI

on:
  push:
    
jobs:
  versioning:
    #  check and make sure action wasnt made by github while committing changes
    # ! uncomment
    # if: >-
    #   github.event.push.pusher.name != 'github' 
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2

    - name: "pull branch changes if any"
      run: git pull

    # - name: "run versioning tests"
    #   run: ./.github/scripts/setup_version_test.sh

    # - name: "get and update version"
    #   env:
    #     SRC_BRANCH: ${{github.ref}}
    #   run: ./.github/scripts/setup_version.sh

    # - name: "write pubspec file with version"
    #   run: ./.github/scripts/effect_version.sh
      
    # # commit changes

    # - name: Add changes to Git tracking
    #   run: git add -A .

    # - name: Commit changes
    #   uses: gha-utilities/workspace-commit@v0.0.4
    #   with:
    #     author: "koa_runner"
    #     email: "runner@withkoa.com"
    #     message: "Bump version ${{env.VERSION_MINOR}}"
    #     all: true

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.ref }}

    # - name: Setup tags
    #   run: git tag -a "v${{env.VERSION_NEW}}" -m "version ${{env.VERSION_NEW}}"

    # - name: Push tags
    #   run: git push --tags

#     - name: Initialize Pull Request
#       uses: gha-utilities/init-pull-request@v0.0.9
#       with:
#         pull_request_token: ${{ secrets.GITHUB_TOKEN }}
#         head: ${{ github.ref }}
#         base: staging
#         title: 'Updates for Production'
#         body: 'Approve and merge to push a release build for ${{env.VERSION_NEW}}'

    - name: Initialize Pull Request
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: ./README.md