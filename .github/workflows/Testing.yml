name: Test CI

on:
  push:
    branches:
      - v*.*
    
jobs:
  versioning:
    #  check and make sure action wasnt made by github while committing changes
    # ! uncomment
    # if: >-
    #   github.event.push.pusher.name != 'github' 
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false

    # - name: "pull branch changes if any"
    #   run: git pull

    # - name: "run versioning tests"
    #   run: ./.github/scripts/setup_version_test.sh

    # - name: "get and update version"
    #   env:
    #     SRC_BRANCH: ${{github.ref}}
    #   run: ./.github/scripts/setup_version.sh

    # - name: "write pubspec file with version"
    #   run: ./.github/scripts/effect_version.sh
      
    # # commit changes

    # - name: Add changes
    #   run: git add -A . && git commit -m "Bump version ${{env.VERSION_MINOR}}"

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.ref }}

    # - name: Setup tags
    #   run: git tag -a "v${{env.VERSION_NEW}}" -m "version ${{env.VERSION_NEW}}" && git push --tags


    - name: Check Pull Requests
      uses: buildsville/list-pull-requests@v1
      id: list
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        skip_hour: '0'

    - name: output
      run: echo '${{ steps.list.outputs.pulls }}'
      
    # - name: Initialize Pull Request
    #   if: ${{ !contains(steps.list.outputs.pulls, 'https://') }}
    #   env: 
    #     VERSION_NEW: ${{env.VERSION_MINOR}}
    #   uses: gha-utilities/init-pull-request@v0.0.9
    #   with:
    #     pull_request_token: ${{ secrets.GITHUB_TOKEN }}
    #     head: ${{ github.ref }}
    #     base: staging
    #     title: 'Updates for Production'
    #     body: 'Approve and merge to push a release build for ${{env.VERSION_NEW}}'

#  update